AWSTemplateFormatVersion: '2010-09-09'
Description: Weekly IAM credential age report with SNS notification

Parameters:
  pNotificationEmail:
    Type: String
    Description: Email address to subscribe to the report

  pLambdaCodeBucket:
    Type: String
    Description: S3 bucket containing Lambda code zips

  pProjectName:
    Type: String
    Description: The name of the project

Resources:
  rIAMCredentialTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${pProjectName}-topic
      Subscription:
        - Protocol: email
          Endpoint: !Ref pNotificationEmail

  rLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Sub ${pProjectName}-common-layer
      Description: Shared layer for Lambda dependencies
      Content:
        S3Bucket: !Ref pLambdaCodeBucket
        S3Key: IAM-Credentials/layers/python.zip
      CompatibleRuntimes:
        - python3.12

  rGenerateReportLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${pProjectName}-rGenerateReportFunction
      RetentionInDays: 14

  rReportLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${pProjectName}-ReportRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ReportPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iam:ListUsers
                  - iam:GetUser
                  - iam:ListAccessKeys
                  - iam:GetAccessKeyLastUsed
                  - sns:Publish
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt rGenerateReportLogGroup.Arn

  rGenerateReportFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${pProjectName}-GenerateReportFunction
      Description: Generates IAM credential report and sends SNS notification
      Runtime: python3.12
      Handler: lambda_handler.lambda_handler
      Role: !GetAtt rReportLambdaRole.Arn
      Code:
        S3Bucket: !Ref pLambdaCodeBucket
        S3Key: IAM-Credentials/codes/generate_iam_report.zip
      Timeout: 300
      Layers:
        - !Ref rLambdaLayer
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref rIAMCredentialTopic

  rWeeklyScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${pProjectName}-TriggerIAMCredentialCheck
      ScheduleExpression: cron(0 8 ? * 2 *) # Monday at 08:00 UTC
      State: ENABLED
      Targets:
        - Arn: !GetAtt rGenerateReportFunction.Arn
          Id: WeeklyIAMCheck

  rLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref rGenerateReportFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt rWeeklyScheduleRule.Arn

Outputs:
  oSNSArn:
    Value: !Ref rIAMCredentialTopic
    Description: SNS Topic ARN

  oReportLambdaName:
    Value: !Ref rGenerateReportFunction
