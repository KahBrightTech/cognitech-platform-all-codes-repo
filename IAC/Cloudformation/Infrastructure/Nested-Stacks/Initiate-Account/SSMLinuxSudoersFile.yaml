AWSTemplateFormatVersion: 2010-09-09
Description: Creates the SSM document for directory services

Parameters: 
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC
    
  pAppName:
    Description: The app cosuming these resources
    Type: String  

  pSSHDConfigFilePath:
    Description: Path to the sshd_config file
    Type: String
    Default: /etc/ssh/sshd_config

  pSudoersFilePath:
    Description: Path to the sudoers file
    Type: String
    Default: /etc/sudoers

  pCloudAdminsGroup:
    Description: The Cloudadmins group to be added to the sudoers file
    Type: String
    Default: Cloudadmins@kahbrigthllc.com
 
Resources: 
  rNestedLinuxSudoersFile:
    Type: AWS::SSM::Document
    Properties: 
      Name: !Sub ${ pAwsAccount }-${ pAppName }-SudoersFileDoc
      DocumentFormat: YAML
      DocumentType: Command
      Content: 
        schemaVersion: '2.2'
        description: "Document to add domain joined linux servers group to sudoers file"
        parameters: 
            pSSHDConfigFilePath:
              description: Path to the sshd_config file
              type: String
              default: !Ref pSSHDConfigFilePath

            pSudoersFilePath:
              description: Path to the sudoers file
              type: String
              default: !Ref pSudoersFilePath

            pCloudAdminsGroup:
              description: The Cloudadmins group to be added to the sudoers file
              type: String
              default: !Ref pCloudAdminsGroup
        mainSteps:
          - action: "aws:runShellScript"
            name: "InstallADDomainGroup"
            inputs:
              runCommand:
                - !Sub |
                        #!/bin/bash -xe
                          ##########################################
                          #  DOMAIN GROUP ADDING TO SUDOERS FILE  #
                          ##########################################
                          # Enable PasswordAuthentication if not already enabled
                          if sudo grep -q "^PasswordAuthentication yes" ${pSSHDConfigFilePath}; then
                              echo "PasswordAuthentication is already set to yes."
                          else
                              echo "Setting PasswordAuthentication to yes..."
                              sudo sed -i 's/^#PasswordAuthentication no/PasswordAuthentication yes/' ${pSSHDConfigFilePath}
                              sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' ${pSSHDConfigFilePath}
                              echo "PasswordAuthentication has been set to yes."
                              # Restart SSH service to apply changes
                              sudo systemctl restart sshd
                          fi

                          # Check if the Cloudadmins group is already in the sudoers file
                          if sudo grep -q "%${pCloudAdminsGroup}" ${pSudoersFilePath}; then
                              echo "The group ${pCloudAdminsGroup} is already in the sudoers file."
                          else
                              echo "Adding ${pCloudAdminsGroup} to the sudoers file with NOPASSWD..."
                              # Add the Cloudadmins group to the sudoers file with NOPASSWD
                              echo "%${pCloudAdminsGroup} ALL=(ALL) NOPASSWD:ALL" | sudo tee -a ${pSudoersFilePath} > /dev/null
                              # Verify the sudoers file
                              if sudo visudo -cf ${pSudoersFilePath}; then
                                  echo "Sudoers file is valid."
                              else
                                  echo "Sudoers file is invalid, please check."
                                  exit 1
                              fi
                          fi
Outputs:
  oNestedLinuxSudoersFile:
    Description: Document for Linux servers to be added to the sudoers file
    Value: !Ref rNestedLinuxSudoersFile
    Export: 
      Name: !Sub ${ pAwsAccount }-${ pAppName }-LinuxSudoersFileJoin






