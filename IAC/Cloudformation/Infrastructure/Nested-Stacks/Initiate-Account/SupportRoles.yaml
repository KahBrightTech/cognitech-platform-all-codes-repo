AWSTemplateFormatVersion: 2010-09-09
Description: This creates the IAM role for the Active directory instance
Parameters: 
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC

  pAppName:
    Description: The app cosuming these resources
    Type: String
    Default: cognitech

  pSharedvpcLoggroup:
    Description: The log group name for the shared services vpc
    Type: String

  pAppvpcLoggroup:
    Description: The log group name for the app vpc
    Type: String


Resources: 
  rNestedADRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: This is the role to be used by the AD instance
    Properties: 
      RoleName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-AD-role
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - !Sub ec2.${AWS::URLSuffix}
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/EC2InstanceProfileForImageBuilder
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEC2FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/SecretsManagerReadWrite
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSDirectoryServiceFullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMDirectoryServiceAccess       
      Path: /

  rNestedADProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: 
        - Ref: rNestedADRole

#####################################################Bastion IAM Roles######################################
  rNestedBastionRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: This is the role to be used by the bastion servers instance
    Properties: 
      RoleName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-bastion-role
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - !Sub ec2.${AWS::URLSuffix}
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: 
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEC2FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess
        - !Sub arn:${AWS::Partition}:iam::aws:policy/SecretsManagerReadWrite
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSDirectoryServiceFullAccess
      Path: /

  rNestedBastionProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: 
        - Ref: rNestedBastionRole

#####################################################Shared Vpc flow log role######################################
  rNestedSharedServicesVPCFlowLogRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: This role will be used to create and put log events for vpc flow log
    Properties: 
      RoleName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-${pSharedvpcLoggroup}-role
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - !Sub vpc-flow-logs.${AWS::URLSuffix}
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-${pSharedvpcLoggroup}-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${ AWS::Region}:${AWS::AccountId}:log-group:${pSharedvpcLoggroup}:*

#####################################################App Vpc flow log role######################################
  rNestedAppVPCFlowLogRole:
    Type: AWS::IAM::Role
    Metadata:
      Comment: This role will be used to create and put log events for vpc flow log
    Properties: 
      RoleName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-${pAppvpcLoggroup}-role
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - !Sub vpc-flow-logs.${AWS::URLSuffix}
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-${pAppvpcLoggroup}-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${ AWS::Region}:${AWS::AccountId}:log-group:${pAppvpcLoggroup}:*  

Outputs:
  oNestedADIAMRoleArn:
    Description: The arn of the AD IAM role 
    Value: !GetAtt rNestedADRole.Arn
    Export: 
      Name: Nested-AD-Role-Arn
    
  oNestedADIAMRoleName:
    Description: The name of the AD IAM role
    Value: !Ref rNestedADRole
    Export: 
      Name: Nested-AD-Role-Name
  
  oNestedADIAMInstanceProfileName:
    Description: The name of the AD instance profile 
    Value: !Ref rNestedADProfile
    Export: 
      Name: Nested-AD-Instance-pfofile-Name

  oNestedBastionIAMRoleArn:
    Description: The arn of the bastion IAM role 
    Value: !GetAtt rNestedBastionRole.Arn
    Export: 
      Name: Nested-bastion-Role-Arn
    
  oNestedBastionIAMRoleName:
    Description: The name of the bastion IAM role
    Value: !Ref rNestedBastionRole
    Export: 
      Name: Nested-bastion-Role-Name
  
  oNestedBastionIAMInstanceProfileName:
    Description: The name of the bastion instance profile 
    Value: !Ref rNestedBastionProfile
    Export: 
      Name: Nested-bastion-Instance-pfofile-Name

  oNestedSharedvpcflowlogRoleArn:
    Description: The arn of the shared services vpc role 
    Value: !GetAtt rNestedSharedServicesVPCFlowLogRole.Arn
    Export: 
      Name: Nested-ss-vpc-flowlog-Role-Arn
    
  oNestedSharedvpcflowlogRoleName:
    Description: The name of the shared services IAM role
    Value: !Ref rNestedSharedServicesVPCFlowLogRole
    Export: 
      Name: Nested-ss-vpc-flowlog-Role-Name

  oNestedAppvpcflowlogRoleArn:
    Description: The arn of the app vpc role 
    Value: !GetAtt rNestedAppVPCFlowLogRole.Arn
    Export: 
      Name: Nested-app-vpc-flowlog-Role-Arn
    
  oNestedAppvpcflowlogRoleName:
    Description: The name of the app vpc role
    Value: !Ref rNestedAppVPCFlowLogRole
    Export: 
      Name: Nested-app-vpc-flowlog-Role-Name  


  