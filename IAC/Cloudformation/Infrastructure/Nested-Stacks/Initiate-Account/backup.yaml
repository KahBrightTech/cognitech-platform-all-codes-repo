AWSTemplateFormatVersion: 2010-09-09
Description: Sets up AWS backup for account resources 

Parameters:
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC
    
  pAppName:
    Type: String
    Default: cognitech

Resources: 
  rNestedBackupPlan:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: !Sub ${ pAwsAccount }-${ pAppName }-backup-plan
        BackupPlanRule:
          - RuleName: daily-backups
            TargetBackupVault: !Ref 'rNestedBackupVault'
            ScheduleExpression: cron(0 5 ? * * *)
            StartWindowMinutes: 60
            Lifecycle:
              DeleteAfterDays: 60

  rNestedBackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: !Sub ${ pAwsAccount }-${ pAppName }-backup-vault
      EncryptionKeyArn: !GetAtt rNestedBackupVaultKey.Arn

  rNestedBackupVaultKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encryption key for daily backups
      Enabled: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
            Action:
              - kms:*
            Resource: '*'

  rNestedBackupVaultKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/cmk/dailybackup
      TargetKeyId: !Ref rNestedBackupVaultKey

  rNestedBackupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - backup.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup

  rNestedBackupSelection:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupSelection:
        SelectionName: !Sub ${ pAwsAccount }-${ pAppName }-backup-tags
        IamRoleArn: !GetAtt 'rNestedBackupRole.Arn'
        ListOfTags:
          - ConditionType: STRINGEQUALS
            ConditionKey: backup
            ConditionValue: !Sub ${ AWS::Region}-daily 
      BackupPlanId: !Ref 'rNestedBackupPlan'
