AWSTemplateFormatVersion: 2010-09-09
Description: Creates both the windows and linux app servers 

Parameters: 
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC
    
  pAppName:
    Type: String
    Default: cognitech
    
  pWindowsDBLatestAmiId:
    Description: The latest ami Id for windows & SQL ami
    Type : 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-SQL_2019_Standard
  
  pDBServerInstanceProfile:
    Description: The instance profile for the DB server
    Type: String
  
  pWindowsDBServerSecurityGroup:
    Description: The windows DB server security group 
    Type: String
  
  pDBServerPrivateSubnetId:
    Description: The subnet Id for the DB server 
    Type: String

  pDocumentName:
    Description: The domain join document for the server
    Type: String

  pAvailabilityZones:
    Description: The availability zones on which the resource will be created 
    Type: CommaDelimitedList
    Default: us-east-1a, us-east-1b

Mappings:
  mAccountVariables:
    "271457809232":
      pKeyPair: TBD
      pInstanceType: t2.micro
    "388927731914":
      pKeyPair: TBD
      pInstanceType: t2.micro 
    "882680178335":
      pKeyPair: TBD
      pInstanceType: t2.micro
    "485147667400":
      pKeyPair: windowscomputer 
      pInstanceType: m5.large 
    "526645041140":
      pKeyPair: TBD
      pInstanceType: t2.micro
    "471112707322":
      pKeyPair: TBD
      pInstanceType: t2.micro
    "730335294148":
      pKeyPair: TBD
      pInstanceType: t2.micro
    "533267408704": 
      pKeyPair: TBD
      pInstanceType: t2.micro
    "637423478842":
      pKeyPair: TBD 
      pInstanceType: t2.micro
     
Resources: 
  rWindowsDBserver:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref pDBServerInstanceProfile
      ImageId: !Ref pWindowsDBLatestAmiId
      InstanceType: !FindInMap 
        - mAccountVariables
        - !Ref AWS::AccountId 
        - pInstanceType
      KeyName: !FindInMap 
        - mAccountVariables
        - !Ref AWS::AccountId 
        - pKeyPair 
      SecurityGroupIds: 
        - !Ref pWindowsDBServerSecurityGroup
      SubnetId: !Ref pDBServerPrivateSubnetId
      UserData:  
        Fn::Base64: !Sub | 
          <powershell>
            # Get a token for IMDSv2
            $token = Invoke-RestMethod -Method Put -Uri http://169.254.169.254/latest/api/token -Headers @{"X-aws-ec2-metadata-token-ttl-seconds"="21600"}
            # Get the instance ID using the token
            $instance_id = Invoke-RestMethod -Uri http://169.254.169.254/latest/meta-data/instance-id -Headers @{"X-aws-ec2-metadata-token"=$token}
            # Check if instance_id is retrieved successfully
            if (-not $instance_id) {
            Write-Host "Failed to retrieve instance ID."
            exit 1
            }
            # Set the default AWS region
            Set-DefaultAWSRegion -Region "us-east-1"
            # Create an SSM association
            New-SSMAssociation -InstanceId $instance_id -Name "${pDocumentName}"
            # Update gpu 
            gpupdate /force
          </powershell>
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-Windows-DB
        - Key: backup
          Value: !Sub ${ AWS::Region}-daily 
        - Key: Patch Group
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-Windows
        - Key: Cost Center 
          Value: 1.0.0.1
        - Key: DNSSuffix 
          Value: kahbrigthllc.com
        - Key: DNSHostName 
          Value: !Sub ${ pAwsAccountLC }wdb 
        - Key: Type  
          Value: DB
        - Key: DomainJoin 
          Value: yes
        - Key: Schedule 
          Value: !Sub ${ pAwsAccount }-${ pAppName }-App
   
  # rWindowsDBserverVolume:
  #   Type: AWS::EC2::Volume
  #   Properties:
  #     AvailabilityZone: !Select [ 0, !Ref pAvailabilityZones ]
  #     Size: 100
  #     Tags:
  #       - Key: Backup
  #         Value: Daily

  # rWindowsDBserverVolumeAttachment:
  #   Type: AWS::EC2::VolumeAttachment
  #   Properties: 
  #     Device: /dev/sdf
  #     InstanceId: !Ref rWindowsDBserver
  #     VolumeId: !Ref rWindowsDBserverVolume
      
Outputs:
  oWindowsDBServerInstanceId:
    Description: The Id of the windows DB server
    Value: !Ref rWindowsDBserver
    Export:
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-Windows-DB

  

    
