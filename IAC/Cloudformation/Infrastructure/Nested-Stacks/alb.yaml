AWSTemplateFormatVersion: 2010-09-09
Description: Creates an ALB for the webservers 

Parameters: 
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC
  
  pAppName:
    Description: The app cosuming these resources
    Type: String
  
  pHealthCheckIntervalSeconds:
    Description: The intervals for health checks
    Type: String
    Default: 30
  
  pHealthCheckProtocol:
    Description: The health check protocol 
    Type: String
    Default: HTTPS
  
  pHealthCheckPath:
    Description: The path for the alb health check
    Type: String
    Default: /
  
  pHealthCheckPort:
    Description: The health check protocol 
    Type: String
    Default: 443
  
  pHealthCheckTimeoutSeconds:
    Description: The amount of time, in seconds, during which no response from a target means a failed health check
    Type: String
    Default: 15 

  pHealthyThresholdCount:
    Description: The number of consecutive health check successes required before considering a target healthy
    Type: String
    Default: 5
  
  pPort:
    Description: The port on which the targets receive traffic
    Type: String
    Default: 80
      
  pProtocol:
    Description: The protocol to use for routing traffic to the targets
    Type: String
    Default: HTTP
  
  pLinuxTarget1:
    Description: The first linux instance ID behind the target group
    Type: String
 
  pLinuxTarget2:
    Description: The second linux instance ID behind the target group
    Type: String

  pWindowsTarget1:
    Description: The first windows instance ID behind the target group
    Type: String
 
  pWindowsTarget2:
    Description: The second windows instance ID behind the target group
    Type: String
  
  pTargetType:
    Description: The type of target that you must specify when registering targets with this target group
    Type: String
    Default: instance
  
  pApp1VPCId:
    Description: The Id of the App1 VPC
    Type: String
  
  pdeletionprotectionenabled:
    Description: Indicates whether deletion protection is enabled
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
  paccesslogss3enabled:
    Description: Indicates whether access logs are enabled
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
  
  paccesslogss3bucket:
    Description: The name of the S3 bucket for the access logs
    Type: String
    Default: nestedalbbucket
  
  palbscheme:
    Description: The alb scheme
    Type: String
    Default: internet-facing
  
  palbsubnet1:
    Description: The first alb subnet
    Type: String

  palbsubnet2:
    Description: The second alb subnet
    Type: String
  
  palbsecuritygroup:
    Description: The alb security group
    Type: String
  
  palbcertificate:
    Description: The alb certificate 
    Type: String

  
  pSslPolicy:
    Description: Security policy to negotiate SSL connections between a client and the load balancer 
    Type: String

  palbport:
    Description: The port on which the load balancer is listening
    Type: String

  palbprotocol:
    Description: The protocol for connections from clients to the load balancer
    Type: String

  

Resources: 
  rNesteddotnetALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: !Ref pHealthCheckIntervalSeconds
      HealthCheckPath: !Ref pHealthCheckPath
      HealthCheckPort: !Ref pHealthCheckPort
      HealthCheckProtocol: !Ref pHealthCheckProtocol
      HealthCheckTimeoutSeconds: !Ref pHealthCheckTimeoutSeconds
      HealthyThresholdCount: !Ref pHealthyThresholdCount
      Matcher: 
        HttpCode: '200'
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-dotnet-alb-tg
      Port: !Ref pPort
      Protocol: !Ref pProtocol
      TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds 
          Value: '20'
      Targets: 
        - Id: !Ref pLinuxTarget1 
      TargetType: !Ref pTargetType
      VpcId: !Ref pApp1VPCId
      Tags: 
        - Key: Name
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-dotnet-alb-tg
  
  rNestedCobsineTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: !Ref pHealthCheckIntervalSeconds
      HealthCheckPath: !Ref pHealthCheckPath
      HealthCheckPort: !Ref pHealthCheckPort
      HealthCheckProtocol: !Ref pHealthCheckProtocol
      HealthCheckTimeoutSeconds: !Ref pHealthCheckTimeoutSeconds
      HealthyThresholdCount: !Ref pHealthyThresholdCount
      Matcher: 
        HttpCode: '200'
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-cobsine-alb-tg
      Port: !Ref pPort
      Protocol: !Ref pProtocol
      TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds 
          Value: '20'
      Targets: 
        - Id: !Ref pLinuxTarget2
      TargetType: !Ref pTargetType
      VpcId: !Ref pApp1VPCId
      Tags: 
        - Key: Name
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-cobsine-alb-tg
  
  rNestedWindowsALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: !Ref pHealthCheckIntervalSeconds
      HealthCheckPath: String
      HealthCheckPort: String
      HealthCheckProtocol: !Ref pHealthCheckProtocol
      HealthCheckTimeoutSeconds: !Ref pHealthCheckTimeoutSeconds
      HealthyThresholdCount: !Ref pHealthyThresholdCount
      Matcher: 
        HttpCode: '200'
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-alb-tg
      Port: !Ref pPort
      Protocol: !Ref pProtocol
      TargetGroupAttributes: 
        - Key: deregistration_delay.timeout_seconds 
          Value: '20'
      Targets: 
        - Id: !Ref pWindowsTarget1 
        - Id: !Ref pWindowsTarget2
      TargetType: !Ref pTargetType
      VpcId: !Ref pApp1VPCId
      Tags: 
        - Key: Name
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-alb-tg
  
  rNestedALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
       IpAddressType: ipv4
       LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: !Ref pdeletionprotectionenabled
        
        - Key: access_logs.s3.enabled
          Value: !Ref paccesslogss3enabled
        
        - Key: access_logs.s3.bucket
          Value: !Ref paccesslogss3bucket

       Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-alb
       Scheme: !Ref palbscheme
       Type: application
       SecurityGroups: 
         - !Ref palbsecuritygroup
       Subnets: 
         - !Ref palbsubnet1 
         - !Ref palbsubnet2
       Tags: 
        - Key: Name
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb 
  rNestedALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
         Certificates: 
           - CertificateArn: !Ref palbcertificate
         DefaultActions: 
            - Type: fixed-response
              FixedResponseConfig:
                ContentType: "text/plain"
                MessageBody: "You've reached the kahbrightllc alb. Its working"
                StatusCode: "503"
         LoadBalancerArn: !Ref rNestedALB
         Port: !Ref palbport
         Protocol: !Ref palbprotocol
         SslPolicy: !Ref pSslPolicy 
  
  rNestedALBListenerLinuxRule1:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref rNesteddotnetALBTargetGroup
      Conditions: 
        - Field: host-header
          HostHeaderConfig:
            Values:
              - dotnet.kahbrigthllc.com
      ListenerArn: !Ref rNestedALBListener
      Priority: 20 
  
  rNestedALBListenerLinuxRule2:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref rNestedCobsineTargetGroup
      Conditions: 
        - Field: host-header
          HostHeaderConfig:
            Values:
              - cobsine.kahbrigthllc.com
      ListenerArn: !Ref rNestedALBListener
      Priority: 10
  
  rNestedALBListenerLinuxRule3:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref rNestedWindowsALBTargetGroup
      Conditions: 
        - Field: host-header
          HostHeaderConfig:
            Values:
              - iis.kahbrigthllc.com
      ListenerArn: !Ref rNestedALBListener
      Priority: 9

Outputs:
  oalbname:
    Description: The alb name
    Value: !Ref rNestedALB
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-name 
  
  oalbarn:
    Description: The alb arn
    Value: !GetAtt rNestedALB.LoadBalancerArn
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-arn 

  oalbdnsname:
    Description: The alb dns name 
    Value: !GetAtt rNestedALB.DNSName
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-dns
  
  ocobsinetgname:
    Description: The cobsine target group name
    Value: !Ref rNestedCobsineTargetGroup
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-cobsine-tg-name 
  
  odotnettgname:
    Description: The dotnet target group name
    Value: !Ref rNesteddotnetALBTargetGroup
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-dotnet-tg-name

  owindowstgname:
    Description: The windows target group name
    Value: !Ref rNestedWindowsALBTargetGroup
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-windows-tg-name