AWSTemplateFormatVersion: 2010-09-09
Description: Creates the SSM document for directory services

Parameters: 
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC
    
  pAppName:
    Description: The app cosuming these resources
    Type: String  

  pSSHDConfigFilePath:
    Description: Path to the sshd_config file
    Type: String
    Default: /etc/ssh/sshd_config

  pSudoersFilePath:
    Description: Path to the sudoers file
    Type: String
    Default: /etc/sudoers

  pCloudAdminsGroup:
    Description: The Cloudadmins group to be added to the sudoers file
    Type: String
    Default: Cloudadmins@kahbrigthllc.com
 
Resources: 
  rNestedLinuxSudoersFile:
    Type: AWS::SSM::Document
    Properties: 
      Name: !Sub ${ pAwsAccount }-${ pAppName }-SudoersFileDoc
      DocumentFormat: JSON
      DocumentType: Command
      Content: 
        schemaVersion: '2.2'
        description: "Document to add domain joined linux servers group to sudoers file"
        mainSteps:
          - action: "aws:runShellScript"
            name: "InstallADDomainGroup"
            inputs:
              runCommand:
                - !Sub |
                    ##########################################
                          DOMAIN GROUP ADDING TO SUDOERS FILE
                    ##########################################
                    #!/bin/bash -xe
                    SSHD_CONFIG='{{ pSSHDConfigFilePath }}'
                    SUDOERS_FILE='{{ pSudoersFilePath }}''
                    CLOUDADMINS_GROUP='{{ pCloudAdminsGroup }}'

                    # Enable PasswordAuthentication if not already enabled
                    if sudo grep -q "^PasswordAuthentication yes" $SSHD_CONFIG; then
                        echo "PasswordAuthentication is already set to yes."
                    else
                        echo "Setting PasswordAuthentication to yes..."
                        sudo sed -i 's/^#PasswordAuthentication no/PasswordAuthentication yes/' $SSHD_CONFIG
                        sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' $SSHD_CONFIG
                        echo "PasswordAuthentication has been set to yes."

                        # Restart SSH service to apply changes
                        sudo systemctl restart sshd
                    fi

                    # Check if the Cloudadmins group is already in the sudoers file
                    if sudo grep -q "%$CLOUDADMINS_GROUP" $SUDOERS_FILE; then
                        echo "The group $CLOUDADMINS_GROUP is already in the sudoers file."
                    else
                        echo "Adding $CLOUDADMINS_GROUP to the sudoers file with NOPASSWD..."

                        # Add the Cloudadmins group to the sudoers file with NOPASSWD
                        echo "%$CLOUDADMINS_GROUP ALL=(ALL) NOPASSWD:ALL" | sudo tee -a $SUDOERS_FILE > /dev/null

                        # Verify the sudoers file
                        if sudo visudo -cf $SUDOERS_FILE; then
                            echo "Sudoers file is valid."
                        else
                            echo "Sudoers file is invalid, please check."
                            exit 1
                        fi
                    fi
Outputs:
  oNestedLinuxSudoersFile:
    Description: Document for Linux servers to be added to the sudoers file
    Value: !Ref rNestedLinuxSudoersFile
    Export: 
      Name: !Sub ${ pAwsAccount }-${ pAppName }-LinuxSudoersFileJoin






