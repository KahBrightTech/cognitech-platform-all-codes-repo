AWSTemplateFormatVersion: 2010-09-09
Description: Creates the security groups for all the ec2 instances

Parameters: 
  pAwsAccount:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccount
  
  pAwsAccountLC:
    Description: The account in which the resources will be created
    Type: AWS::SSM::Parameter::Value<String>
    Default: /standard/AWSAccountLC

  pAppName:
    Description: The app cosuming these resources
    Type: String
    Default: cognitech
  
  # vpc parameters 
  pVpcid:
    Description: The id of the vpc in which to create the security group 
    Type: String 
  
  pSharedServicesVPCId:
    Description: The Id of the shared services VPC in which to create the secuity group
    Type: String
  
  pSharedServicesVPCCidr:
    Type: String
    Default: 10.1.2.0/24



Resources: 
  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  rNestedsshbastionsg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: ssh bastion security group
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-ssh-bastion
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: "Allow SSH access from the internet"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-ssh-bastion
      VpcId: !Ref pSharedServicesVPCId

  rNestedrdpbastionsg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: rdp bastion security group
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-rdp-bastion
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
          Description: "Allow RDP access from the internet"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-rdp-bastion
      VpcId: !Ref pSharedServicesVPCId
############################ALB Security group################################
  rNestedalbsg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: The alb security group 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-sg
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: "Allow HTTPS access from the internet"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "Allow HTTP access from the internet"
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxwebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTP access to linux Web server"
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxwebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTPS access to linux Web server"
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowswebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTP access to windows Web server"
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowswebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTPS access to windows Web server"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-sg
      VpcId: !Ref pVpcid 
 ############################NLB Security group################################## 
  rNestednlbsg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: The nlb security group 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-nlb-sg
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: "Allow HTTPS access from the internet"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "Allow HTTP access from the internet"
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxwebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTP access to linux Web server"
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxwebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTPS access to linux Web server"
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowswebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTP access to windows Web server"
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowswebserversg
               - GroupId
        Description: "Allow Outbound traffic HTTPS access to windows Web server"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-sg
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-nlb-sg
      VpcId: !Ref pVpcid
  #########################Linux App server Security group######################
  rNestedlinuxAppserversg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the linux App server 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-App-server-sg
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref pSharedServicesVPCCidr
          Description: "Allow SSH access from the Bastion"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxwebserversg
              - GroupId
          Description: "Allow HTTPS access from the Web server"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxwebserversg
              - GroupId
          Description: "Allow HTTP access from the Web server"
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 50000
        ToPort: 50100
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowsdatabaseserversg
               - GroupId
        Description: "Allow outbound traffic to DB server on tcp port 50000 to 50100"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-App-server-sg
      VpcId: !Ref pVpcid

  #########################Windows App server Security group######################
  rNestedWindowsAppserversg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the Windows App server 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-App-server-sg
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref pSharedServicesVPCCidr
          Description: "Allow RDP access from the Web Bastion"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowswebserversg
              - GroupId
          Description: "Allow HTTPS access from the Web server"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowswebserversg
              - GroupId
          Description: "Allow HTTP access from the Web server"
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 50000
        ToPort: 50100
        SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedwindowsdatabaseserversg
               - GroupId
        Description: "Allow outbound traffic to DB server on tcp port 50000 to 50100"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-App-server-sg
      VpcId: !Ref pVpcid
   
  ###########################Windows Web server Security group######################
  rNestedwindowswebserversg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the windows web server 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-web-server-sg
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref pSharedServicesVPCCidr
          Description: "Allow RDP access from the Bastion"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedalbsg
              - GroupId 
          Description: "Allow HTTPS access from the ALB"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedalbsg
              - GroupId
          Description: "Allow HTTP access from the ALB"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestednlbsg
              - GroupId
          Description: "Allow HTTPS access from the NLB"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestednlbsg
              - GroupId
          Description: "Allow HTTP access from the NLB"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-web-server-sg
      VpcId: !Ref pVpcid
      
###########################Linux Web server Security group######################
  rNestedlinuxwebserversg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the linux web server 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-web-server-sg
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref pSharedServicesVPCCidr
          Description: "Allow SSH access from the Bastion"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedalbsg
              - GroupId
          Description: "Allow HTTPS access from the ALB"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedalbsg
              - GroupId
          Description: "Allow HTTP access from the ALB"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestednlbsg
              - GroupId 
          Description: "Allow HTTP access from the NLB"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestednlbsg
              - GroupId
          Description: "Allow HTTP access from the NLB"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-web-server-sg
      VpcId: !Ref pVpcid
  
  ###########################Windows database Security group######################
  rNestedwindowsdatabaseserversg:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for the windows database 
      GroupName: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-DB
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 50000
          ToPort: 50100
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedWindowsAppserversg
              - GroupId
          Description: "Allow range 50000-50100 access from the Windows Appserver"
        - IpProtocol: tcp
          FromPort: 50000
          ToPort: 50100
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxAppserversg
              - GroupId
          Description: "Allow range 50000-50100 access from the Linux Appserver"
        - IpProtocol: tcp
          FromPort: 445
          ToPort: 445
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedlinuxAppserversg
              - GroupId
          Description: "Allow HTTP access from Linux Appserver"
        - IpProtocol: tcp
          FromPort: 445
          ToPort: 445
          SourceSecurityGroupId: 
            Fn::GetAtt:
              - rNestedWindowsAppserversg
              - GroupId
          Description: "Allow HTTP access from Windows Appserver"
      Tags: 
        - Key: Name 
          Value: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-DB
      VpcId: !Ref pVpcid
Outputs:
  oNestedsshbastionsg:
    Description: The ssh bastion security group Id
    Value: !Ref rNestedsshbastionsg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-ssh-bastion-sg
  
  oNestedrdpbastionsg:
    Description: The rdp bastion security group Id 
    Value: !Ref rNestedrdpbastionsg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-rdp-bastion-sg

  oNestedalbsg:
    Description: The alb security group Id
    Value: !Ref rNestedalbsg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-alb-sg
  
  oNestednlbsg:
    Description: The nlb security group Id 
    Value: !Ref rNestednlbsg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-nlb-sg
  
  oNestedwindowswebsg:
    Description: The windows webserver security group Id 
    Value: !Ref rNestedwindowswebserversg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-web-server-sg

  oNestedlinuxwebsg:
    Description: The linux webserver security group Id 
    Value: !Ref rNestedlinuxwebserversg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-web-server-sg

  oNestedlinuxAppsg:
    Description: The linux Appserver security group Id 
    Value: !Ref rNestedlinuxAppserversg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-L-App-server-sg

  oNestedWindowsAppsg:
    Description: The Windows Appserver security group Id 
    Value: !Ref rNestedWindowsAppserversg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-App-server-sg

  oNestedWindowsDBsg:
    Description: The Windows Database security group Id 
    Value: !Ref rNestedwindowsdatabaseserversg
    Export: 
      Name: !Sub ${ pAwsAccount }-${ AWS::Region}-${ pAppName }-W-DB